7e5f640db9cb8a09bbac478188ed2d18
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
var AssetSourceResolver = require("./AssetSourceResolver");
var _require = require("./AssetUtils"),
  pickScale = _require.pickScale;
var AssetRegistry = require('@react-native/assets-registry/registry');
var _customSourceTransformer, _serverURL, _scriptURL;
var _sourceCodeScriptURL;
function getSourceCodeScriptURL() {
  if (_sourceCodeScriptURL) {
    return _sourceCodeScriptURL;
  }
  var sourceCode = global.nativeExtensions && global.nativeExtensions.SourceCode;
  if (!sourceCode) {
    sourceCode = require("../NativeModules/specs/NativeSourceCode")["default"];
  }
  _sourceCodeScriptURL = sourceCode.getConstants().scriptURL;
  return _sourceCodeScriptURL;
}
function getDevServerURL() {
  if (_serverURL === undefined) {
    var sourceCodeScriptURL = getSourceCodeScriptURL();
    var match = sourceCodeScriptURL && sourceCodeScriptURL.match(/^https?:\/\/.*?\//);
    if (match) {
      _serverURL = match[0];
    } else {
      _serverURL = null;
    }
  }
  return _serverURL;
}
function _coerceLocalScriptURL(scriptURL) {
  if (scriptURL) {
    if (scriptURL.startsWith('assets://')) {
      return null;
    }
    scriptURL = scriptURL.substring(0, scriptURL.lastIndexOf('/') + 1);
    if (!scriptURL.includes('://')) {
      scriptURL = 'file://' + scriptURL;
    }
  }
  return scriptURL;
}
function getScriptURL() {
  if (_scriptURL === undefined) {
    _scriptURL = _coerceLocalScriptURL(getSourceCodeScriptURL());
  }
  return _scriptURL;
}
function setCustomSourceTransformer(transformer) {
  _customSourceTransformer = transformer;
}
function resolveAssetSource(source) {
  if ((0, _typeof2["default"])(source) === 'object') {
    return source;
  }
  var asset = AssetRegistry.getAssetByID(source);
  if (!asset) {
    return null;
  }
  var resolver = new AssetSourceResolver(getDevServerURL(), getScriptURL(), asset);
  if (_customSourceTransformer) {
    return _customSourceTransformer(resolver);
  }
  return resolver.defaultAsset();
}
resolveAssetSource.pickScale = pickScale;
resolveAssetSource.setCustomSourceTransformer = setCustomSourceTransformer;
module.exports = resolveAssetSource;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl90eXBlb2YyIiwiQXNzZXRTb3VyY2VSZXNvbHZlciIsIl9yZXF1aXJlIiwicGlja1NjYWxlIiwiQXNzZXRSZWdpc3RyeSIsIl9jdXN0b21Tb3VyY2VUcmFuc2Zvcm1lciIsIl9zZXJ2ZXJVUkwiLCJfc2NyaXB0VVJMIiwiX3NvdXJjZUNvZGVTY3JpcHRVUkwiLCJnZXRTb3VyY2VDb2RlU2NyaXB0VVJMIiwic291cmNlQ29kZSIsImdsb2JhbCIsIm5hdGl2ZUV4dGVuc2lvbnMiLCJTb3VyY2VDb2RlIiwiZ2V0Q29uc3RhbnRzIiwic2NyaXB0VVJMIiwiZ2V0RGV2U2VydmVyVVJMIiwidW5kZWZpbmVkIiwic291cmNlQ29kZVNjcmlwdFVSTCIsIm1hdGNoIiwiX2NvZXJjZUxvY2FsU2NyaXB0VVJMIiwic3RhcnRzV2l0aCIsInN1YnN0cmluZyIsImxhc3RJbmRleE9mIiwiaW5jbHVkZXMiLCJnZXRTY3JpcHRVUkwiLCJzZXRDdXN0b21Tb3VyY2VUcmFuc2Zvcm1lciIsInRyYW5zZm9ybWVyIiwicmVzb2x2ZUFzc2V0U291cmNlIiwic291cmNlIiwiYXNzZXQiLCJnZXRBc3NldEJ5SUQiLCJyZXNvbHZlciIsImRlZmF1bHRBc3NldCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJyZXNvbHZlQXNzZXRTb3VyY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIEBmbG93XG4gKi9cblxuLy8gUmVzb2x2ZXMgYW4gYXNzZXQgaW50byBhIGBzb3VyY2VgIGZvciBgSW1hZ2VgLlxuXG4ndXNlIHN0cmljdCc7XG5cbmltcG9ydCB0eXBlIHtSZXNvbHZlZEFzc2V0U291cmNlfSBmcm9tICcuL0Fzc2V0U291cmNlUmVzb2x2ZXInO1xuXG5jb25zdCBBc3NldFNvdXJjZVJlc29sdmVyID0gcmVxdWlyZSgnLi9Bc3NldFNvdXJjZVJlc29sdmVyJyk7XG5jb25zdCB7cGlja1NjYWxlfSA9IHJlcXVpcmUoJy4vQXNzZXRVdGlscycpO1xuY29uc3QgQXNzZXRSZWdpc3RyeSA9IHJlcXVpcmUoJ0ByZWFjdC1uYXRpdmUvYXNzZXRzLXJlZ2lzdHJ5L3JlZ2lzdHJ5Jyk7XG5cbmxldCBfY3VzdG9tU291cmNlVHJhbnNmb3JtZXIsIF9zZXJ2ZXJVUkwsIF9zY3JpcHRVUkw7XG5cbmxldCBfc291cmNlQ29kZVNjcmlwdFVSTDogP3N0cmluZztcbmZ1bmN0aW9uIGdldFNvdXJjZUNvZGVTY3JpcHRVUkwoKTogP3N0cmluZyB7XG4gIGlmIChfc291cmNlQ29kZVNjcmlwdFVSTCkge1xuICAgIHJldHVybiBfc291cmNlQ29kZVNjcmlwdFVSTDtcbiAgfVxuXG4gIGxldCBzb3VyY2VDb2RlID1cbiAgICBnbG9iYWwubmF0aXZlRXh0ZW5zaW9ucyAmJiBnbG9iYWwubmF0aXZlRXh0ZW5zaW9ucy5Tb3VyY2VDb2RlO1xuICBpZiAoIXNvdXJjZUNvZGUpIHtcbiAgICBzb3VyY2VDb2RlID0gcmVxdWlyZSgnLi4vTmF0aXZlTW9kdWxlcy9zcGVjcy9OYXRpdmVTb3VyY2VDb2RlJykuZGVmYXVsdDtcbiAgfVxuICBfc291cmNlQ29kZVNjcmlwdFVSTCA9IHNvdXJjZUNvZGUuZ2V0Q29uc3RhbnRzKCkuc2NyaXB0VVJMO1xuICByZXR1cm4gX3NvdXJjZUNvZGVTY3JpcHRVUkw7XG59XG5cbmZ1bmN0aW9uIGdldERldlNlcnZlclVSTCgpOiA/c3RyaW5nIHtcbiAgaWYgKF9zZXJ2ZXJVUkwgPT09IHVuZGVmaW5lZCkge1xuICAgIGNvbnN0IHNvdXJjZUNvZGVTY3JpcHRVUkwgPSBnZXRTb3VyY2VDb2RlU2NyaXB0VVJMKCk7XG4gICAgY29uc3QgbWF0Y2ggPVxuICAgICAgc291cmNlQ29kZVNjcmlwdFVSTCAmJiBzb3VyY2VDb2RlU2NyaXB0VVJMLm1hdGNoKC9eaHR0cHM/OlxcL1xcLy4qP1xcLy8pO1xuICAgIGlmIChtYXRjaCkge1xuICAgICAgLy8ganNCdW5kbGUgd2FzIGxvYWRlZCBmcm9tIG5ldHdvcmtcbiAgICAgIF9zZXJ2ZXJVUkwgPSBtYXRjaFswXTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8ganNCdW5kbGUgd2FzIGxvYWRlZCBmcm9tIGZpbGVcbiAgICAgIF9zZXJ2ZXJVUkwgPSBudWxsO1xuICAgIH1cbiAgfVxuICByZXR1cm4gX3NlcnZlclVSTDtcbn1cblxuZnVuY3Rpb24gX2NvZXJjZUxvY2FsU2NyaXB0VVJMKHNjcmlwdFVSTDogP3N0cmluZyk6ID9zdHJpbmcge1xuICBpZiAoc2NyaXB0VVJMKSB7XG4gICAgaWYgKHNjcmlwdFVSTC5zdGFydHNXaXRoKCdhc3NldHM6Ly8nKSkge1xuICAgICAgLy8gYW5kcm9pZDogcnVubmluZyBmcm9tIHdpdGhpbiBhc3NldHMsIG5vIG9mZmxpbmUgcGF0aCB0byB1c2VcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBzY3JpcHRVUkwgPSBzY3JpcHRVUkwuc3Vic3RyaW5nKDAsIHNjcmlwdFVSTC5sYXN0SW5kZXhPZignLycpICsgMSk7XG4gICAgaWYgKCFzY3JpcHRVUkwuaW5jbHVkZXMoJzovLycpKSB7XG4gICAgICAvLyBBZGQgZmlsZSBwcm90b2NvbCBpbiBjYXNlIHdlIGhhdmUgYW4gYWJzb2x1dGUgZmlsZSBwYXRoIGFuZCBub3QgYSBVUkwuXG4gICAgICAvLyBUaGlzIHNob3VsZG4ndCByZWFsbHkgYmUgbmVjZXNzYXJ5LiBzY3JpcHRVUkwgc2hvdWxkIGJlIGEgVVJMLlxuICAgICAgc2NyaXB0VVJMID0gJ2ZpbGU6Ly8nICsgc2NyaXB0VVJMO1xuICAgIH1cbiAgfVxuICByZXR1cm4gc2NyaXB0VVJMO1xufVxuXG5mdW5jdGlvbiBnZXRTY3JpcHRVUkwoKTogP3N0cmluZyB7XG4gIGlmIChfc2NyaXB0VVJMID09PSB1bmRlZmluZWQpIHtcbiAgICBfc2NyaXB0VVJMID0gX2NvZXJjZUxvY2FsU2NyaXB0VVJMKGdldFNvdXJjZUNvZGVTY3JpcHRVUkwoKSk7XG4gIH1cbiAgcmV0dXJuIF9zY3JpcHRVUkw7XG59XG5cbmZ1bmN0aW9uIHNldEN1c3RvbVNvdXJjZVRyYW5zZm9ybWVyKFxuICB0cmFuc2Zvcm1lcjogKHJlc29sdmVyOiBBc3NldFNvdXJjZVJlc29sdmVyKSA9PiBSZXNvbHZlZEFzc2V0U291cmNlLFxuKTogdm9pZCB7XG4gIF9jdXN0b21Tb3VyY2VUcmFuc2Zvcm1lciA9IHRyYW5zZm9ybWVyO1xufVxuXG4vKipcbiAqIGBzb3VyY2VgIGlzIGVpdGhlciBhIG51bWJlciAob3BhcXVlIHR5cGUgcmV0dXJuZWQgYnkgcmVxdWlyZSgnLi9mb28ucG5nJykpXG4gKiBvciBhbiBgSW1hZ2VTb3VyY2VgIGxpa2UgeyB1cmk6ICc8aHR0cCBsb2NhdGlvbiB8fCBmaWxlIHBhdGg+JyB9XG4gKi9cbmZ1bmN0aW9uIHJlc29sdmVBc3NldFNvdXJjZShzb3VyY2U6IGFueSk6ID9SZXNvbHZlZEFzc2V0U291cmNlIHtcbiAgaWYgKHR5cGVvZiBzb3VyY2UgPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIHNvdXJjZTtcbiAgfVxuXG4gIGNvbnN0IGFzc2V0ID0gQXNzZXRSZWdpc3RyeS5nZXRBc3NldEJ5SUQoc291cmNlKTtcbiAgaWYgKCFhc3NldCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3QgcmVzb2x2ZXIgPSBuZXcgQXNzZXRTb3VyY2VSZXNvbHZlcihcbiAgICBnZXREZXZTZXJ2ZXJVUkwoKSxcbiAgICBnZXRTY3JpcHRVUkwoKSxcbiAgICBhc3NldCxcbiAgKTtcbiAgaWYgKF9jdXN0b21Tb3VyY2VUcmFuc2Zvcm1lcikge1xuICAgIHJldHVybiBfY3VzdG9tU291cmNlVHJhbnNmb3JtZXIocmVzb2x2ZXIpO1xuICB9XG4gIHJldHVybiByZXNvbHZlci5kZWZhdWx0QXNzZXQoKTtcbn1cblxucmVzb2x2ZUFzc2V0U291cmNlLnBpY2tTY2FsZSA9IHBpY2tTY2FsZTtcbnJlc29sdmVBc3NldFNvdXJjZS5zZXRDdXN0b21Tb3VyY2VUcmFuc2Zvcm1lciA9IHNldEN1c3RvbVNvdXJjZVRyYW5zZm9ybWVyO1xubW9kdWxlLmV4cG9ydHMgPSByZXNvbHZlQXNzZXRTb3VyY2U7XG4iXSwibWFwcGluZ3MiOiJBQVlBLFlBQVk7O0FBQUMsSUFBQUEsc0JBQUEsR0FBQUMsT0FBQTtBQUFBLElBQUFDLFFBQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUliLElBQU1FLG1CQUFtQixHQUFHRixPQUFPLHdCQUF3QixDQUFDO0FBQzVELElBQUFHLFFBQUEsR0FBb0JILE9BQU8sZUFBZSxDQUFDO0VBQXBDSSxTQUFTLEdBQUFELFFBQUEsQ0FBVEMsU0FBUztBQUNoQixJQUFNQyxhQUFhLEdBQUdMLE9BQU8sQ0FBQyx3Q0FBd0MsQ0FBQztBQUV2RSxJQUFJTSx3QkFBd0IsRUFBRUMsVUFBVSxFQUFFQyxVQUFVO0FBRXBELElBQUlDLG9CQUE2QjtBQUNqQyxTQUFTQyxzQkFBc0JBLENBQUEsRUFBWTtFQUN6QyxJQUFJRCxvQkFBb0IsRUFBRTtJQUN4QixPQUFPQSxvQkFBb0I7RUFDN0I7RUFFQSxJQUFJRSxVQUFVLEdBQ1pDLE1BQU0sQ0FBQ0MsZ0JBQWdCLElBQUlELE1BQU0sQ0FBQ0MsZ0JBQWdCLENBQUNDLFVBQVU7RUFDL0QsSUFBSSxDQUFDSCxVQUFVLEVBQUU7SUFDZkEsVUFBVSxHQUFHWCxPQUFPLDBDQUEwQyxDQUFDLFdBQVE7RUFDekU7RUFDQVMsb0JBQW9CLEdBQUdFLFVBQVUsQ0FBQ0ksWUFBWSxDQUFDLENBQUMsQ0FBQ0MsU0FBUztFQUMxRCxPQUFPUCxvQkFBb0I7QUFDN0I7QUFFQSxTQUFTUSxlQUFlQSxDQUFBLEVBQVk7RUFDbEMsSUFBSVYsVUFBVSxLQUFLVyxTQUFTLEVBQUU7SUFDNUIsSUFBTUMsbUJBQW1CLEdBQUdULHNCQUFzQixDQUFDLENBQUM7SUFDcEQsSUFBTVUsS0FBSyxHQUNURCxtQkFBbUIsSUFBSUEsbUJBQW1CLENBQUNDLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQztJQUN2RSxJQUFJQSxLQUFLLEVBQUU7TUFFVGIsVUFBVSxHQUFHYSxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsTUFBTTtNQUVMYixVQUFVLEdBQUcsSUFBSTtJQUNuQjtFQUNGO0VBQ0EsT0FBT0EsVUFBVTtBQUNuQjtBQUVBLFNBQVNjLHFCQUFxQkEsQ0FBQ0wsU0FBa0IsRUFBVztFQUMxRCxJQUFJQSxTQUFTLEVBQUU7SUFDYixJQUFJQSxTQUFTLENBQUNNLFVBQVUsQ0FBQyxXQUFXLENBQUMsRUFBRTtNQUVyQyxPQUFPLElBQUk7SUFDYjtJQUNBTixTQUFTLEdBQUdBLFNBQVMsQ0FBQ08sU0FBUyxDQUFDLENBQUMsRUFBRVAsU0FBUyxDQUFDUSxXQUFXLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2xFLElBQUksQ0FBQ1IsU0FBUyxDQUFDUyxRQUFRLENBQUMsS0FBSyxDQUFDLEVBQUU7TUFHOUJULFNBQVMsR0FBRyxTQUFTLEdBQUdBLFNBQVM7SUFDbkM7RUFDRjtFQUNBLE9BQU9BLFNBQVM7QUFDbEI7QUFFQSxTQUFTVSxZQUFZQSxDQUFBLEVBQVk7RUFDL0IsSUFBSWxCLFVBQVUsS0FBS1UsU0FBUyxFQUFFO0lBQzVCVixVQUFVLEdBQUdhLHFCQUFxQixDQUFDWCxzQkFBc0IsQ0FBQyxDQUFDLENBQUM7RUFDOUQ7RUFDQSxPQUFPRixVQUFVO0FBQ25CO0FBRUEsU0FBU21CLDBCQUEwQkEsQ0FDakNDLFdBQW1FLEVBQzdEO0VBQ050Qix3QkFBd0IsR0FBR3NCLFdBQVc7QUFDeEM7QUFNQSxTQUFTQyxrQkFBa0JBLENBQUNDLE1BQVcsRUFBd0I7RUFDN0QsSUFBSSxJQUFBN0IsUUFBQSxhQUFPNkIsTUFBTSxNQUFLLFFBQVEsRUFBRTtJQUM5QixPQUFPQSxNQUFNO0VBQ2Y7RUFFQSxJQUFNQyxLQUFLLEdBQUcxQixhQUFhLENBQUMyQixZQUFZLENBQUNGLE1BQU0sQ0FBQztFQUNoRCxJQUFJLENBQUNDLEtBQUssRUFBRTtJQUNWLE9BQU8sSUFBSTtFQUNiO0VBRUEsSUFBTUUsUUFBUSxHQUFHLElBQUkvQixtQkFBbUIsQ0FDdENlLGVBQWUsQ0FBQyxDQUFDLEVBQ2pCUyxZQUFZLENBQUMsQ0FBQyxFQUNkSyxLQUNGLENBQUM7RUFDRCxJQUFJekIsd0JBQXdCLEVBQUU7SUFDNUIsT0FBT0Esd0JBQXdCLENBQUMyQixRQUFRLENBQUM7RUFDM0M7RUFDQSxPQUFPQSxRQUFRLENBQUNDLFlBQVksQ0FBQyxDQUFDO0FBQ2hDO0FBRUFMLGtCQUFrQixDQUFDekIsU0FBUyxHQUFHQSxTQUFTO0FBQ3hDeUIsa0JBQWtCLENBQUNGLDBCQUEwQixHQUFHQSwwQkFBMEI7QUFDMUVRLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHUCxrQkFBa0IifQ==