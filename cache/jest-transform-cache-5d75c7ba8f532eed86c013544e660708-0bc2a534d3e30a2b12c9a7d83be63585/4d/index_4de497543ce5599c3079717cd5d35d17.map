{"version":3,"names":["base64Decode","require","_require","NativeModules","TypeMismatchError","_Error","_inherits2","default","_super","_createSuper","_classCallCheck2","apply","arguments","_createClass2","_wrapNativeSuper2","Error","QuotaExceededError","_Error2","_super2","warned","insecureRandomValues","array","console","warn","i","r","length","Math","random","getRandomBase64","byteLength","RNGetRandomValues","ExpoRandom","getRandomBase64String","global","ExpoModules","getRandomValues","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Uint8ClampedArray","expo","modules","ExpoCrypto","__DEV__","nativeCallSyncHook","buffer","byteOffset","crypto"],"sources":["index.js"],"sourcesContent":["const base64Decode = require('fast-base64-decode')\nconst { NativeModules } = require('react-native')\n\nclass TypeMismatchError extends Error {}\nclass QuotaExceededError extends Error {}\n\nlet warned = false\nfunction insecureRandomValues (array) {\n  if (!warned) {\n    console.warn('Using an insecure random number generator, this should only happen when running in a debugger without support for crypto.getRandomValues')\n    warned = true\n  }\n\n  for (let i = 0, r; i < array.length; i++) {\n    if ((i & 0x03) === 0) r = Math.random() * 0x100000000\n    array[i] = (r >>> ((i & 0x03) << 3)) & 0xff\n  }\n\n  return array\n}\n\n/**\n * @param {number} byteLength\n * @returns {string}\n */\nfunction getRandomBase64 (byteLength) {\n  if (NativeModules.RNGetRandomValues) {\n    return NativeModules.RNGetRandomValues.getRandomBase64(byteLength)\n  } else if (NativeModules.ExpoRandom) {\n    // Expo SDK 41-44\n    return NativeModules.ExpoRandom.getRandomBase64String(byteLength)\n  } else if (global.ExpoModules) {\n    // Expo SDK 45+\n    return global.ExpoModules.ExpoRandom.getRandomBase64String(byteLength);\n  } else {\n    throw new Error('Native module not found')\n  }\n}\n\n/**\n * @param {Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray} array\n */\nfunction getRandomValues (array) {\n  if (!(array instanceof Int8Array || array instanceof Uint8Array || array instanceof Int16Array || array instanceof Uint16Array || array instanceof Int32Array || array instanceof Uint32Array || array instanceof Uint8ClampedArray)) {\n    throw new TypeMismatchError('Expected an integer array')\n  }\n\n  if (array.byteLength > 65536) {\n    throw new QuotaExceededError('Can only request a maximum of 65536 bytes')\n  }\n\n  // Expo SDK 48+\n  if (global.expo && global.expo.modules && global.expo.modules.ExpoCrypto && global.expo.modules.ExpoCrypto.getRandomValues) {\n    // ExpoCrypto.getRandomValues doesn't return the array\n    global.expo.modules.ExpoCrypto.getRandomValues(array)\n    return array\n  }\n\n  // Calling getRandomBase64 in debug mode leads to the error\n  // \"Calling synchronous methods on native modules is not supported in Chrome\".\n  // So in that specific case we fall back to just using Math.random.\n  if (__DEV__) {\n    if (typeof global.nativeCallSyncHook === 'undefined') {\n      return insecureRandomValues(array)\n    }\n  }\n\n  base64Decode(getRandomBase64(array.byteLength), new Uint8Array(array.buffer, array.byteOffset, array.byteLength))\n\n  return array\n}\n\nif (typeof global.crypto !== 'object') {\n  global.crypto = {}\n}\n\nif (typeof global.crypto.getRandomValues !== 'function') {\n  global.crypto.getRandomValues = getRandomValues\n}\n"],"mappings":"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"}