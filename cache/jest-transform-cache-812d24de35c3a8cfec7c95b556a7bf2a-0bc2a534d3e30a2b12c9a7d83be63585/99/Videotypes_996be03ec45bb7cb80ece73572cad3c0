2e09420cc693f9db6d37b6f050ec582f
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VideoFullscreenUpdate = exports.ResizeMode = void 0;
var ResizeMode;
exports.ResizeMode = ResizeMode;
(function (ResizeMode) {
  ResizeMode["CONTAIN"] = "contain";
  ResizeMode["COVER"] = "cover";
  ResizeMode["STRETCH"] = "stretch";
})(ResizeMode || (exports.ResizeMode = ResizeMode = {}));
var VideoFullscreenUpdate;
exports.VideoFullscreenUpdate = VideoFullscreenUpdate;
(function (VideoFullscreenUpdate) {
  VideoFullscreenUpdate[VideoFullscreenUpdate["PLAYER_WILL_PRESENT"] = 0] = "PLAYER_WILL_PRESENT";
  VideoFullscreenUpdate[VideoFullscreenUpdate["PLAYER_DID_PRESENT"] = 1] = "PLAYER_DID_PRESENT";
  VideoFullscreenUpdate[VideoFullscreenUpdate["PLAYER_WILL_DISMISS"] = 2] = "PLAYER_WILL_DISMISS";
  VideoFullscreenUpdate[VideoFullscreenUpdate["PLAYER_DID_DISMISS"] = 3] = "PLAYER_DID_DISMISS";
})(VideoFullscreenUpdate || (exports.VideoFullscreenUpdate = VideoFullscreenUpdate = {}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,