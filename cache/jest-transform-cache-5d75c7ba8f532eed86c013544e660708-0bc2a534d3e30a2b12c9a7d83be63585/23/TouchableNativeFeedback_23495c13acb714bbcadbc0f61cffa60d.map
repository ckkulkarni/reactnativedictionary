{"version":3,"names":["_View","_interopRequireDefault","require","_Pressability","_PressabilityDebug","_RendererProxy","_processColor","_Platform","_ViewNativeComponent","_invariant","React","_interopRequireWildcard","_jsxRuntime","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","TouchableNativeFeedback","_React$Component","_inherits2","_super","_this","_classCallCheck2","_len","args","Array","_key","concat","state","pressability","Pressability","_createPressabilityConfig","_createClass2","value","_this$props$ariaDisa","_this$props$accessibi","_this2","accessibilityStateDisabled","props","accessibilityState","disabled","cancelable","rejectResponderTermination","hitSlop","delayLongPress","delayPressIn","delayPressOut","minPressDuration","pressRectOffset","pressRetentionOffset","android_disableSound","touchSoundDisabled","onLongPress","onPress","onPressIn","event","Platform","OS","_dispatchHotspotUpdate","_dispatchPressedStateChange","onPressMove","onPressOut","pressed","hostComponentRef","findHostInstance_DEPRECATED","console","warn","Commands","setPressed","_event$nativeEvent","nativeEvent","locationX","locationY","hotspotUpdate","render","_this$props$ariaBusy","_this$props$accessibi2","_this$props$ariaChec","_this$props$accessibi3","_this$props$ariaDisa2","_this$props$accessibi4","_this$props$ariaExpa","_this$props$accessibi5","_this$props$ariaSele","_this$props$accessibi6","_this$props$ariaValu","_this$props$accessibi7","_this$props$ariaValu2","_this$props$accessibi8","_this$props$ariaValu3","_this$props$accessibi9","_this$props$ariaValu4","_this$props$accessibi10","_this$props$ariaLive","_this$props$ariaLabe","_this$props$ariaModa","_this$props$ariaHidd","element","Children","only","children","__DEV__","type","View","jsx","PressabilityDebugView","color","_this$state$pressabil","getEventHandlers","onBlur","onFocus","eventHandlersWithoutBlurAndFocus","_objectWithoutProperties2","_accessibilityState","busy","checked","expanded","selected","accessibilityValue","max","min","now","text","accessibilityLiveRegion","accessibilityLabel","cloneElement","getBackgroundProp","background","undefined","SelectableBackground","useForeground","accessible","accessibilityHint","accessibilityLanguage","accessibilityRole","accessibilityActions","onAccessibilityAction","importantForAccessibility","accessibilityViewIsModal","accessibilityElementsHidden","hasTVPreferredFocus","focusable","nativeID","nextFocusDown","nextFocusForward","nextFocusLeft","nextFocusRight","nextFocusUp","onLayout","testID","componentDidUpdate","prevProps","prevState","configure","componentWillUnmount","reset","Component","rippleRadius","attribute","SelectableBackgroundBorderless","Ripple","borderless","processedColor","processColor","invariant","canUseNativeForeground","Version","nativeForegroundAndroid","nativeBackgroundAndroid","displayName","module","exports"],"sources":["TouchableNativeFeedback.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {PressEvent} from '../../Types/CoreEventTypes';\nimport typeof TouchableWithoutFeedback from './TouchableWithoutFeedback';\n\nimport View from '../../Components/View/View';\nimport Pressability, {\n  type PressabilityConfig,\n} from '../../Pressability/Pressability';\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug';\nimport {findHostInstance_DEPRECATED} from '../../ReactNative/RendererProxy';\nimport processColor from '../../StyleSheet/processColor';\nimport Platform from '../../Utilities/Platform';\nimport {Commands} from '../View/ViewNativeComponent';\nimport invariant from 'invariant';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  ...React.ElementConfig<TouchableWithoutFeedback>,\n\n  /**\n   * Determines the type of background drawable that's going to be used to\n   * display feedback. It takes an object with `type` property and extra data\n   * depending on the `type`. It's recommended to use one of the static\n   * methods to generate that dictionary.\n   */\n  background?: ?(\n    | $ReadOnly<{|\n        type: 'ThemeAttrAndroid',\n        attribute:\n          | 'selectableItemBackground'\n          | 'selectableItemBackgroundBorderless',\n        rippleRadius: ?number,\n      |}>\n    | $ReadOnly<{|\n        type: 'RippleAndroid',\n        color: ?number,\n        borderless: boolean,\n        rippleRadius: ?number,\n      |}>\n  ),\n\n  /**\n   * TV preferred focus (see documentation for the View component).\n   */\n  hasTVPreferredFocus?: ?boolean,\n\n  /**\n   * TV next focus down (see documentation for the View component).\n   */\n  nextFocusDown?: ?number,\n\n  /**\n   * TV next focus forward (see documentation for the View component).\n   */\n  nextFocusForward?: ?number,\n\n  /**\n   * TV next focus left (see documentation for the View component).\n   */\n  nextFocusLeft?: ?number,\n\n  /**\n   * TV next focus right (see documentation for the View component).\n   */\n  nextFocusRight?: ?number,\n\n  /**\n   * TV next focus up (see documentation for the View component).\n   */\n  nextFocusUp?: ?number,\n\n  /**\n   * Set to true to add the ripple effect to the foreground of the view, instead\n   * of the background. This is useful if one of your child views has a\n   * background of its own, or you're e.g. displaying images, and you don't want\n   * the ripple to be covered by them.\n   *\n   * Check TouchableNativeFeedback.canUseNativeForeground() first, as this is\n   * only available on Android 6.0 and above. If you try to use this on older\n   * versions, this will fallback to background.\n   */\n  useForeground?: ?boolean,\n|}>;\n\ntype State = $ReadOnly<{|\n  pressability: Pressability,\n|}>;\n\nclass TouchableNativeFeedback extends React.Component<Props, State> {\n  /**\n   * Creates a value for the `background` prop that uses the Android theme's\n   * default background for selectable elements.\n   */\n  static SelectableBackground: (rippleRadius: ?number) => $ReadOnly<{|\n    attribute: 'selectableItemBackground',\n    type: 'ThemeAttrAndroid',\n    rippleRadius: ?number,\n  |}> = (rippleRadius: ?number) => ({\n    type: 'ThemeAttrAndroid',\n    attribute: 'selectableItemBackground',\n    rippleRadius,\n  });\n\n  /**\n   * Creates a value for the `background` prop that uses the Android theme's\n   * default background for borderless selectable elements. Requires API 21+.\n   */\n  static SelectableBackgroundBorderless: (rippleRadius: ?number) => $ReadOnly<{|\n    attribute: 'selectableItemBackgroundBorderless',\n    type: 'ThemeAttrAndroid',\n    rippleRadius: ?number,\n  |}> = (rippleRadius: ?number) => ({\n    type: 'ThemeAttrAndroid',\n    attribute: 'selectableItemBackgroundBorderless',\n    rippleRadius,\n  });\n\n  /**\n   * Creates a value for the `background` prop that uses the Android ripple with\n   * the supplied color. If `borderless` is true, the ripple will render outside\n   * of the view bounds. Requires API 21+.\n   */\n  static Ripple: (\n    color: string,\n    borderless: boolean,\n    rippleRadius: ?number,\n  ) => $ReadOnly<{|\n    borderless: boolean,\n    color: ?number,\n    rippleRadius: ?number,\n    type: 'RippleAndroid',\n  |}> = (color: string, borderless: boolean, rippleRadius: ?number) => {\n    const processedColor = processColor(color);\n    invariant(\n      processedColor == null || typeof processedColor === 'number',\n      'Unexpected color given for Ripple color',\n    );\n    return {\n      type: 'RippleAndroid',\n      color: processedColor,\n      borderless,\n      rippleRadius,\n    };\n  };\n\n  /**\n   * Whether `useForeground` is supported.\n   */\n  static canUseNativeForeground: () => boolean = () =>\n    Platform.OS === 'android' && Platform.Version >= 23;\n\n  state: State = {\n    pressability: new Pressability(this._createPressabilityConfig()),\n  };\n\n  _createPressabilityConfig(): PressabilityConfig {\n    const accessibilityStateDisabled =\n      this.props['aria-disabled'] ?? this.props.accessibilityState?.disabled;\n    return {\n      cancelable: !this.props.rejectResponderTermination,\n      disabled:\n        this.props.disabled != null\n          ? this.props.disabled\n          : accessibilityStateDisabled,\n      hitSlop: this.props.hitSlop,\n      delayLongPress: this.props.delayLongPress,\n      delayPressIn: this.props.delayPressIn,\n      delayPressOut: this.props.delayPressOut,\n      minPressDuration: 0,\n      pressRectOffset: this.props.pressRetentionOffset,\n      android_disableSound: this.props.touchSoundDisabled,\n      onLongPress: this.props.onLongPress,\n      onPress: this.props.onPress,\n      onPressIn: event => {\n        if (Platform.OS === 'android') {\n          this._dispatchHotspotUpdate(event);\n          this._dispatchPressedStateChange(true);\n        }\n        if (this.props.onPressIn != null) {\n          this.props.onPressIn(event);\n        }\n      },\n      onPressMove: event => {\n        if (Platform.OS === 'android') {\n          this._dispatchHotspotUpdate(event);\n        }\n      },\n      onPressOut: event => {\n        if (Platform.OS === 'android') {\n          this._dispatchPressedStateChange(false);\n        }\n        if (this.props.onPressOut != null) {\n          this.props.onPressOut(event);\n        }\n      },\n    };\n  }\n\n  _dispatchPressedStateChange(pressed: boolean): void {\n    if (Platform.OS === 'android') {\n      const hostComponentRef = findHostInstance_DEPRECATED(this);\n      if (hostComponentRef == null) {\n        console.warn(\n          'Touchable: Unable to find HostComponent instance. ' +\n            'Has your Touchable component been unmounted?',\n        );\n      } else {\n        Commands.setPressed(hostComponentRef, pressed);\n      }\n    }\n  }\n\n  _dispatchHotspotUpdate(event: PressEvent): void {\n    if (Platform.OS === 'android') {\n      const {locationX, locationY} = event.nativeEvent;\n      const hostComponentRef = findHostInstance_DEPRECATED(this);\n      if (hostComponentRef == null) {\n        console.warn(\n          'Touchable: Unable to find HostComponent instance. ' +\n            'Has your Touchable component been unmounted?',\n        );\n      } else {\n        Commands.hotspotUpdate(\n          hostComponentRef,\n          locationX ?? 0,\n          locationY ?? 0,\n        );\n      }\n    }\n  }\n\n  render(): React.Node {\n    const element = React.Children.only<$FlowFixMe>(this.props.children);\n    const children: Array<React.Node> = [element.props.children];\n    if (__DEV__) {\n      if (element.type === View) {\n        children.push(\n          <PressabilityDebugView color=\"brown\" hitSlop={this.props.hitSlop} />,\n        );\n      }\n    }\n\n    // BACKWARD-COMPATIBILITY: Focus and blur events were never supported before\n    // adopting `Pressability`, so preserve that behavior.\n    const {onBlur, onFocus, ...eventHandlersWithoutBlurAndFocus} =\n      this.state.pressability.getEventHandlers();\n\n    let _accessibilityState = {\n      busy: this.props['aria-busy'] ?? this.props.accessibilityState?.busy,\n      checked:\n        this.props['aria-checked'] ?? this.props.accessibilityState?.checked,\n      disabled:\n        this.props['aria-disabled'] ?? this.props.accessibilityState?.disabled,\n      expanded:\n        this.props['aria-expanded'] ?? this.props.accessibilityState?.expanded,\n      selected:\n        this.props['aria-selected'] ?? this.props.accessibilityState?.selected,\n    };\n\n    _accessibilityState =\n      this.props.disabled != null\n        ? {\n            ..._accessibilityState,\n            disabled: this.props.disabled,\n          }\n        : _accessibilityState;\n\n    const accessibilityValue = {\n      max: this.props['aria-valuemax'] ?? this.props.accessibilityValue?.max,\n      min: this.props['aria-valuemin'] ?? this.props.accessibilityValue?.min,\n      now: this.props['aria-valuenow'] ?? this.props.accessibilityValue?.now,\n      text: this.props['aria-valuetext'] ?? this.props.accessibilityValue?.text,\n    };\n\n    const accessibilityLiveRegion =\n      this.props['aria-live'] === 'off'\n        ? 'none'\n        : this.props['aria-live'] ?? this.props.accessibilityLiveRegion;\n\n    const accessibilityLabel =\n      this.props['aria-label'] ?? this.props.accessibilityLabel;\n    return React.cloneElement(\n      element,\n      {\n        ...eventHandlersWithoutBlurAndFocus,\n        ...getBackgroundProp(\n          this.props.background === undefined\n            ? TouchableNativeFeedback.SelectableBackground()\n            : this.props.background,\n          this.props.useForeground === true,\n        ),\n        accessible: this.props.accessible !== false,\n        accessibilityHint: this.props.accessibilityHint,\n        accessibilityLanguage: this.props.accessibilityLanguage,\n        accessibilityLabel: accessibilityLabel,\n        accessibilityRole: this.props.accessibilityRole,\n        accessibilityState: _accessibilityState,\n        accessibilityActions: this.props.accessibilityActions,\n        onAccessibilityAction: this.props.onAccessibilityAction,\n        accessibilityValue: accessibilityValue,\n        importantForAccessibility:\n          this.props['aria-hidden'] === true\n            ? 'no-hide-descendants'\n            : this.props.importantForAccessibility,\n        accessibilityViewIsModal:\n          this.props['aria-modal'] ?? this.props.accessibilityViewIsModal,\n        accessibilityLiveRegion: accessibilityLiveRegion,\n        accessibilityElementsHidden:\n          this.props['aria-hidden'] ?? this.props.accessibilityElementsHidden,\n        hasTVPreferredFocus: this.props.hasTVPreferredFocus,\n        hitSlop: this.props.hitSlop,\n        focusable:\n          this.props.focusable !== false &&\n          this.props.onPress !== undefined &&\n          !this.props.disabled,\n        nativeID: this.props.nativeID,\n        nextFocusDown: this.props.nextFocusDown,\n        nextFocusForward: this.props.nextFocusForward,\n        nextFocusLeft: this.props.nextFocusLeft,\n        nextFocusRight: this.props.nextFocusRight,\n        nextFocusUp: this.props.nextFocusUp,\n        onLayout: this.props.onLayout,\n        testID: this.props.testID,\n      },\n      ...children,\n    );\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    this.state.pressability.configure(this._createPressabilityConfig());\n  }\n\n  componentWillUnmount(): void {\n    this.state.pressability.reset();\n  }\n}\n\nconst getBackgroundProp =\n  Platform.OS === 'android'\n    ? /* $FlowFixMe[missing-local-annot] The type annotation(s) required by\n       * Flow's LTI update could not be added via codemod */\n      (background, useForeground: boolean) =>\n        useForeground && TouchableNativeFeedback.canUseNativeForeground()\n          ? {nativeForegroundAndroid: background}\n          : {nativeBackgroundAndroid: background}\n    : /* $FlowFixMe[missing-local-annot] The type annotation(s) required by\n       * Flow's LTI update could not be added via codemod */\n      (background, useForeground: boolean) => null;\n\nTouchableNativeFeedback.displayName = 'TouchableNativeFeedback';\n\nmodule.exports = TouchableNativeFeedback;\n"],"mappings":"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"}