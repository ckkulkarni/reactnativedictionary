{"version":3,"names":["_expoConstants","_interopRequireDefault","require","FileSystem","_interopRequireWildcard","_PlatformUtils","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","bundledAssets","Set","localAssets","getLocalAssets","getLocalAssetUri","hash","type","localAssetsKey","legacyLocalAssetsKey","__DEV__","assetName","Constants","appOwnership","bundleDirectory"],"sources":["../src/LocalAssets.ts"],"sourcesContent":["import Constants from 'expo-constants';\nimport * as FileSystem from 'expo-file-system';\n\nimport { getLocalAssets } from './PlatformUtils';\n\n// Fast lookup check if assets are available in the local bundle in managed apps\nconst bundledAssets = new Set(FileSystem.bundledAssets || []);\n\n// localAssets are provided by the expo-updates module\nconst localAssets = getLocalAssets();\n\n/**\n * Returns the URI of a local asset from its hash, or null if the asset is not available locally\n */\nexport function getLocalAssetUri(hash: string, type: string | null): string | null {\n  const localAssetsKey = hash;\n  const legacyLocalAssetsKey = `${hash}.${type ?? ''}`;\n\n  switch (true) {\n    case localAssetsKey in localAssets: {\n      return localAssets[localAssetsKey];\n    }\n    case legacyLocalAssetsKey in localAssets: {\n      // legacy updates store assets with an extension\n      return localAssets[legacyLocalAssetsKey];\n    }\n    case !__DEV__: {\n      // check legacy location in case we're in Expo client/managed workflow\n      // TODO(eric): remove this once bundledAssets is no longer exported from FileSystem\n      const assetName = `asset_${hash}${type ? `.${type}` : ''}`;\n      if (Constants.appOwnership !== 'standalone' || !bundledAssets.has(assetName)) {\n        return null;\n      }\n      return `${FileSystem.bundleDirectory}${assetName}`;\n    }\n    default:\n      return null;\n  }\n}\n"],"mappings":";;;;;AAAA,IAAAA,cAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAC,uBAAA,CAAAF,OAAA;AAEA,IAAAG,cAAA,GAAAH,OAAA;AAAiD,SAAAI,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAH,wBAAAO,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAGjD,IAAMW,aAAa,GAAG,IAAIC,GAAG,CAAC1B,UAAU,CAACyB,aAAa,IAAI,EAAE,CAAC;AAG7D,IAAME,WAAW,GAAG,IAAAC,6BAAc,GAAE;AAK9B,SAAUC,gBAAgBA,CAACC,IAAY,EAAEC,IAAmB;EAChE,IAAMC,cAAc,GAAGF,IAAI;EAC3B,IAAMG,oBAAoB,GAAG,GAAGH,IAAI,IAAIC,IAAI,WAAJA,IAAI,GAAI,EAAE,EAAE;EAEpD,QAAQ,IAAI;IACV,KAAKC,cAAc,IAAIL,WAAW;MAAE;QAClC,OAAOA,WAAW,CAACK,cAAc,CAAC;;IAEpC,KAAKC,oBAAoB,IAAIN,WAAW;MAAE;QAExC,OAAOA,WAAW,CAACM,oBAAoB,CAAC;;IAE1C,KAAK,CAACC,OAAO;MAAE;QAGb,IAAMC,SAAS,GAAG,SAASL,IAAI,GAAGC,IAAI,GAAG,IAAIA,IAAI,EAAE,GAAG,EAAE,EAAE;QAC1D,IAAIK,sBAAS,CAACC,YAAY,KAAK,YAAY,IAAI,CAACZ,aAAa,CAACb,GAAG,CAACuB,SAAS,CAAC,EAAE;UAC5E,OAAO,IAAI;;QAEb,OAAO,GAAGnC,UAAU,CAACsC,eAAe,GAAGH,SAAS,EAAE;;IAEpD;MACE,OAAO,IAAI;;AAEjB"}