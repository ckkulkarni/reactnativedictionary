{"version":3,"names":["PressabilityDebug","_interopRequireWildcard","require","_usePressability","_interopRequireDefault","_flattenStyle","_processColor","_AcessibilityMapping","_Platform","_TextAncestor","_TextNativeComponent","React","_jsxRuntime","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","Text","forwardRef","props","forwardedRef","_accessibilityState2","_accessibilityState3","_style","_style3","_style4","accessible","accessibilityLabel","accessibilityRole","accessibilityState","allowFontScaling","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaLabel","ariaSelected","ellipsizeMode","id","nativeID","onLongPress","onPress","onPressIn","onPressOut","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","pressRetentionOffset","role","suppressHighlighting","restProps","_objectWithoutProperties2","_useState","useState","_useState2","_slicedToArray2","isHighlighted","setHighlighted","_accessibilityState","busy","checked","disabled","expanded","selected","_disabled","nativeTextAccessibilityState","isPressable","initialized","useLazyInitialization","config","useMemo","pressRectOffset","event","onResponderTerminationRequest_DEPRECATED","onStartShouldSetResponder_DEPRECATED","eventHandlers","usePressability","eventHandlersForText","onClick","selectionColor","processColor","style","__DEV__","isEnabled","color","numberOfLines","console","error","hasTextAncestor","useContext","TextAncestor","_accessible","Platform","select","ios","flattenStyle","fontWeight","_style2","toString","_selectable","selectable","userSelect","userSelectToSelectableMap","verticalAlign","textAlignVertical","verticalAlignToTextAlignVerticalMap","_hasOnPressOrOnLongPress","jsx","NativeVirtualText","getAccessibilityRoleFromRole","ref","Provider","value","children","NativeText","OS","displayName","propTypes","TextPropTypes","newValue","_useState3","_useState4","oldValue","setValue","auto","text","none","contain","all","top","bottom","middle","module","exports"],"sources":["Text.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {PressEvent} from '../Types/CoreEventTypes';\nimport type {TextProps} from './TextProps';\n\nimport * as PressabilityDebug from '../Pressability/PressabilityDebug';\nimport usePressability from '../Pressability/usePressability';\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport processColor from '../StyleSheet/processColor';\nimport {getAccessibilityRoleFromRole} from '../Utilities/AcessibilityMapping';\nimport Platform from '../Utilities/Platform';\nimport TextAncestor from './TextAncestor';\nimport {NativeText, NativeVirtualText} from './TextNativeComponent';\nimport * as React from 'react';\nimport {useContext, useMemo, useState} from 'react';\n\n/**\n * Text is the fundamental component for displaying text.\n *\n * @see https://reactnative.dev/docs/text\n */\nconst Text: React.AbstractComponent<\n  TextProps,\n  React.ElementRef<typeof NativeText | typeof NativeVirtualText>,\n> = React.forwardRef((props: TextProps, forwardedRef) => {\n  const {\n    accessible,\n    accessibilityLabel,\n    accessibilityRole,\n    accessibilityState,\n    allowFontScaling,\n    'aria-busy': ariaBusy,\n    'aria-checked': ariaChecked,\n    'aria-disabled': ariaDisabled,\n    'aria-expanded': ariaExpanded,\n    'aria-label': ariaLabel,\n    'aria-selected': ariaSelected,\n    ellipsizeMode,\n    id,\n    nativeID,\n    onLongPress,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onResponderGrant,\n    onResponderMove,\n    onResponderRelease,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onStartShouldSetResponder,\n    pressRetentionOffset,\n    role,\n    suppressHighlighting,\n    ...restProps\n  } = props;\n\n  const [isHighlighted, setHighlighted] = useState(false);\n\n  let _accessibilityState;\n  if (\n    accessibilityState != null ||\n    ariaBusy != null ||\n    ariaChecked != null ||\n    ariaDisabled != null ||\n    ariaExpanded != null ||\n    ariaSelected != null\n  ) {\n    _accessibilityState = {\n      busy: ariaBusy ?? accessibilityState?.busy,\n      checked: ariaChecked ?? accessibilityState?.checked,\n      disabled: ariaDisabled ?? accessibilityState?.disabled,\n      expanded: ariaExpanded ?? accessibilityState?.expanded,\n      selected: ariaSelected ?? accessibilityState?.selected,\n    };\n  }\n\n  const _disabled =\n    restProps.disabled != null\n      ? restProps.disabled\n      : _accessibilityState?.disabled;\n\n  const nativeTextAccessibilityState =\n    _disabled !== _accessibilityState?.disabled\n      ? {..._accessibilityState, disabled: _disabled}\n      : _accessibilityState;\n\n  const isPressable =\n    (onPress != null ||\n      onLongPress != null ||\n      onStartShouldSetResponder != null) &&\n    _disabled !== true;\n\n  const initialized = useLazyInitialization(isPressable);\n  const config = useMemo(\n    () =>\n      initialized\n        ? {\n            disabled: !isPressable,\n            pressRectOffset: pressRetentionOffset,\n            onLongPress,\n            onPress,\n            onPressIn(event: PressEvent) {\n              setHighlighted(!suppressHighlighting);\n              onPressIn?.(event);\n            },\n            onPressOut(event: PressEvent) {\n              setHighlighted(false);\n              onPressOut?.(event);\n            },\n            onResponderTerminationRequest_DEPRECATED:\n              onResponderTerminationRequest,\n            onStartShouldSetResponder_DEPRECATED: onStartShouldSetResponder,\n          }\n        : null,\n    [\n      initialized,\n      isPressable,\n      pressRetentionOffset,\n      onLongPress,\n      onPress,\n      onPressIn,\n      onPressOut,\n      onResponderTerminationRequest,\n      onStartShouldSetResponder,\n      suppressHighlighting,\n    ],\n  );\n\n  const eventHandlers = usePressability(config);\n  const eventHandlersForText = useMemo(\n    () =>\n      eventHandlers == null\n        ? null\n        : {\n            onResponderGrant(event: PressEvent) {\n              eventHandlers.onResponderGrant(event);\n              if (onResponderGrant != null) {\n                onResponderGrant(event);\n              }\n            },\n            onResponderMove(event: PressEvent) {\n              eventHandlers.onResponderMove(event);\n              if (onResponderMove != null) {\n                onResponderMove(event);\n              }\n            },\n            onResponderRelease(event: PressEvent) {\n              eventHandlers.onResponderRelease(event);\n              if (onResponderRelease != null) {\n                onResponderRelease(event);\n              }\n            },\n            onResponderTerminate(event: PressEvent) {\n              eventHandlers.onResponderTerminate(event);\n              if (onResponderTerminate != null) {\n                onResponderTerminate(event);\n              }\n            },\n            onClick: eventHandlers.onClick,\n            onResponderTerminationRequest:\n              eventHandlers.onResponderTerminationRequest,\n            onStartShouldSetResponder: eventHandlers.onStartShouldSetResponder,\n          },\n    [\n      eventHandlers,\n      onResponderGrant,\n      onResponderMove,\n      onResponderRelease,\n      onResponderTerminate,\n    ],\n  );\n\n  // TODO: Move this processing to the view configuration.\n  const selectionColor =\n    restProps.selectionColor == null\n      ? null\n      : processColor(restProps.selectionColor);\n\n  let style = restProps.style;\n\n  if (__DEV__) {\n    if (PressabilityDebug.isEnabled() && onPress != null) {\n      style = [restProps.style, {color: 'magenta'}];\n    }\n  }\n\n  let numberOfLines = restProps.numberOfLines;\n  if (numberOfLines != null && !(numberOfLines >= 0)) {\n    console.error(\n      `'numberOfLines' in <Text> must be a non-negative number, received: ${numberOfLines}. The value will be set to 0.`,\n    );\n    numberOfLines = 0;\n  }\n\n  const hasTextAncestor = useContext(TextAncestor);\n\n  const _accessible = Platform.select({\n    ios: accessible !== false,\n    default: accessible,\n  });\n\n  // $FlowFixMe[underconstrained-implicit-instantiation]\n  style = flattenStyle(style);\n\n  if (typeof style?.fontWeight === 'number') {\n    style.fontWeight = style?.fontWeight.toString();\n  }\n\n  let _selectable = restProps.selectable;\n  if (style?.userSelect != null) {\n    _selectable = userSelectToSelectableMap[style.userSelect];\n    delete style.userSelect;\n  }\n\n  if (style?.verticalAlign != null) {\n    style.textAlignVertical =\n      verticalAlignToTextAlignVerticalMap[style.verticalAlign];\n    delete style.verticalAlign;\n  }\n\n  const _hasOnPressOrOnLongPress =\n    props.onPress != null || props.onLongPress != null;\n\n  return hasTextAncestor ? (\n    <NativeVirtualText\n      {...restProps}\n      {...eventHandlersForText}\n      accessibilityLabel={ariaLabel ?? accessibilityLabel}\n      accessibilityRole={\n        role ? getAccessibilityRoleFromRole(role) : accessibilityRole\n      }\n      accessibilityState={_accessibilityState}\n      isHighlighted={isHighlighted}\n      isPressable={isPressable}\n      nativeID={id ?? nativeID}\n      numberOfLines={numberOfLines}\n      ref={forwardedRef}\n      selectable={_selectable}\n      selectionColor={selectionColor}\n      style={style}\n    />\n  ) : (\n    <TextAncestor.Provider value={true}>\n      <NativeText\n        {...restProps}\n        {...eventHandlersForText}\n        accessibilityLabel={ariaLabel ?? accessibilityLabel}\n        accessibilityRole={\n          role ? getAccessibilityRoleFromRole(role) : accessibilityRole\n        }\n        accessibilityState={nativeTextAccessibilityState}\n        accessible={\n          accessible == null && Platform.OS === 'android'\n            ? _hasOnPressOrOnLongPress\n            : _accessible\n        }\n        allowFontScaling={allowFontScaling !== false}\n        disabled={_disabled}\n        ellipsizeMode={ellipsizeMode ?? 'tail'}\n        isHighlighted={isHighlighted}\n        nativeID={id ?? nativeID}\n        numberOfLines={numberOfLines}\n        ref={forwardedRef}\n        selectable={_selectable}\n        selectionColor={selectionColor}\n        style={style}\n      />\n    </TextAncestor.Provider>\n  );\n});\n\nText.displayName = 'Text';\n\n/**\n * Switch to `deprecated-react-native-prop-types` for compatibility with future\n * releases. This is deprecated and will be removed in the future.\n */\nText.propTypes = require('deprecated-react-native-prop-types').TextPropTypes;\n\n/**\n * Returns false until the first time `newValue` is true, after which this will\n * always return true. This is necessary to lazily initialize `Pressability` so\n * we do not eagerly create one for every pressable `Text` component.\n */\nfunction useLazyInitialization(newValue: boolean): boolean {\n  const [oldValue, setValue] = useState(newValue);\n  if (!oldValue && newValue) {\n    setValue(newValue);\n  }\n  return oldValue;\n}\n\nconst userSelectToSelectableMap = {\n  auto: true,\n  text: true,\n  none: false,\n  contain: true,\n  all: true,\n};\n\nconst verticalAlignToTextAlignVerticalMap = {\n  auto: 'auto',\n  top: 'top',\n  bottom: 'bottom',\n  middle: 'center',\n};\n\nmodule.exports = Text;\n"],"mappings":"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"}