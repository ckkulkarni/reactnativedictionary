{"version":3,"names":["_expoModulesCore","require","_reactNative","_Constants","_ExponentConstants","_interopRequireDefault","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","ExponentConstants","console","warn","rawManifest","NativeModulesProxy","ExpoUpdates","updatesManifest","manifest","manifestString","JSON","parse","NativeModules","EXDevLauncher","devLauncherManifest","_ref","name","appOwnership","nativeConstants","_objectWithoutProperties2","warnedAboutManifestField","constants","installationId","get","__unsafeNoWarnManifest","maybeManifest","getManifest","isAppManifest","__unsafeNoWarnManifest2","isManifest","__DEV__","manifest2","expoConfig","_maybeManifest$extra$","_maybeManifest$extra","extra","expoClient","expoGoConfig","_maybeManifest$extra$2","_maybeManifest$extra2","expoGo","easConfig","_maybeManifest$extra$3","_maybeManifest$extra3","eas","__rawManifest_TEST","set","value","suppressWarning","undefined","invalidManifestType","executionEnvironment","ExecutionEnvironment","Bare","Platform","OS","StoreClient","Standalone","CodedError","_default","exports"],"sources":["../src/Constants.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport { CodedError, NativeModulesProxy } from 'expo-modules-core';\nimport { Platform, NativeModules } from 'react-native';\n\nimport {\n  AndroidManifest,\n  AppManifest,\n  AppOwnership,\n  Constants,\n  EASConfig,\n  ExecutionEnvironment,\n  ExpoGoConfig,\n  IOSManifest,\n  Manifest,\n  NativeConstants,\n  PlatformManifest,\n  UserInterfaceIdiom,\n  WebManifest,\n} from './Constants.types';\nimport ExponentConstants from './ExponentConstants';\n\nexport {\n  AndroidManifest,\n  AppOwnership,\n  Constants,\n  ExecutionEnvironment,\n  IOSManifest,\n  NativeConstants,\n  PlatformManifest,\n  UserInterfaceIdiom,\n  WebManifest,\n};\n\nif (!ExponentConstants) {\n  console.warn(\n    \"No native ExponentConstants module found, are you sure the expo-constants's module is linked properly?\"\n  );\n}\n\nlet rawManifest: AppManifest | Manifest | null = null;\n// If expo-updates defines a non-empty manifest, prefer that one\nif (NativeModulesProxy.ExpoUpdates) {\n  let updatesManifest;\n  if (NativeModulesProxy.ExpoUpdates.manifest) {\n    updatesManifest = NativeModulesProxy.ExpoUpdates.manifest;\n  } else if (NativeModulesProxy.ExpoUpdates.manifestString) {\n    updatesManifest = JSON.parse(NativeModulesProxy.ExpoUpdates.manifestString);\n  }\n  if (updatesManifest && Object.keys(updatesManifest).length > 0) {\n    rawManifest = updatesManifest;\n  }\n}\n\n// If dev-launcher defines a non-empty manifest, prefer that one\nif (NativeModules.EXDevLauncher) {\n  let devLauncherManifest;\n  if (NativeModules.EXDevLauncher.manifestString) {\n    devLauncherManifest = JSON.parse(NativeModules.EXDevLauncher.manifestString);\n  }\n\n  if (devLauncherManifest && Object.keys(devLauncherManifest).length > 0) {\n    rawManifest = devLauncherManifest;\n  }\n}\n\n// Fall back to ExponentConstants.manifest if we don't have one from Updates\nif (!rawManifest && ExponentConstants && ExponentConstants.manifest) {\n  rawManifest = ExponentConstants.manifest;\n  // On Android we pass the manifest in JSON form so this step is necessary\n  if (typeof rawManifest === 'string') {\n    rawManifest = JSON.parse(rawManifest);\n  }\n}\n\nconst { name, appOwnership, ...nativeConstants } = (ExponentConstants || {}) as any;\n\nlet warnedAboutManifestField = false;\n\nconst constants: Constants = {\n  ...nativeConstants,\n  // Ensure this is null in bare workflow\n  appOwnership: appOwnership ?? null,\n};\n\nObject.defineProperties(constants, {\n  installationId: {\n    get() {\n      return nativeConstants.installationId;\n    },\n    enumerable: false,\n  },\n  /**\n   * Use `manifest` property by default.\n   * This property is only used for internal purposes.\n   * It behaves similarly to the original one, but suppresses warning upon no manifest available.\n   * `expo-asset` uses it to prevent users from seeing mentioned warning.\n   */\n  __unsafeNoWarnManifest: {\n    get(): AppManifest | Manifest | null {\n      const maybeManifest = getManifest(true);\n      if (!maybeManifest || !isAppManifest(maybeManifest)) {\n        return null;\n      }\n      return maybeManifest;\n    },\n    enumerable: false,\n  },\n  __unsafeNoWarnManifest2: {\n    get(): Manifest | null {\n      const maybeManifest = getManifest(true);\n      if (!maybeManifest || !isManifest(maybeManifest)) {\n        return null;\n      }\n      return maybeManifest;\n    },\n    enumerable: false,\n  },\n  manifest: {\n    get(): AppManifest | null {\n      if (__DEV__ && !warnedAboutManifestField) {\n        console.warn(`Constants.manifest has been deprecated in favor of Constants.expoConfig.`);\n        warnedAboutManifestField = true;\n      }\n\n      const maybeManifest = getManifest();\n      if (!maybeManifest || !isAppManifest(maybeManifest)) {\n        return null;\n      }\n      return maybeManifest;\n    },\n    enumerable: true,\n  },\n  manifest2: {\n    get(): Manifest | null {\n      const maybeManifest = getManifest();\n      if (!maybeManifest || !isManifest(maybeManifest)) {\n        return null;\n      }\n      return maybeManifest;\n    },\n    enumerable: true,\n  },\n  expoConfig: {\n    get():\n      | (ExpoConfig & {\n          /**\n           * Only present during development using @expo/cli.\n           */\n          hostUri?: string;\n        })\n      | null {\n      const maybeManifest = getManifest(true);\n      if (!maybeManifest) {\n        return null;\n      }\n\n      if (isManifest(maybeManifest)) {\n        return maybeManifest.extra?.expoClient ?? null;\n      } else if (isAppManifest(maybeManifest)) {\n        return maybeManifest;\n      }\n\n      return null;\n    },\n    enumerable: true,\n  },\n  expoGoConfig: {\n    get(): ExpoGoConfig | null {\n      const maybeManifest = getManifest(true);\n      if (!maybeManifest) {\n        return null;\n      }\n\n      if (isManifest(maybeManifest)) {\n        return maybeManifest.extra?.expoGo ?? null;\n      } else if (isAppManifest(maybeManifest)) {\n        return maybeManifest;\n      }\n\n      return null;\n    },\n    enumerable: true,\n  },\n  easConfig: {\n    get(): EASConfig | null {\n      const maybeManifest = getManifest(true);\n      if (!maybeManifest) {\n        return null;\n      }\n\n      if (isManifest(maybeManifest)) {\n        return maybeManifest.extra?.eas ?? null;\n      } else if (isAppManifest(maybeManifest)) {\n        return maybeManifest;\n      }\n\n      return null;\n    },\n    enumerable: true,\n  },\n  __rawManifest_TEST: {\n    get(): AppManifest | Manifest | null {\n      return rawManifest;\n    },\n    set(value: AppManifest | Manifest | null) {\n      rawManifest = value;\n    },\n    enumerable: false,\n  },\n});\n\nfunction isAppManifest(manifest: AppManifest | Manifest): manifest is AppManifest {\n  return !isManifest(manifest);\n}\n\nfunction isManifest(manifest: AppManifest | Manifest): manifest is Manifest {\n  return 'metadata' in manifest;\n}\n\nfunction getManifest(suppressWarning = false): AppManifest | Manifest | null {\n  if (!rawManifest) {\n    const invalidManifestType = rawManifest === null ? 'null' : 'undefined';\n    if (\n      nativeConstants.executionEnvironment === ExecutionEnvironment.Bare &&\n      Platform.OS !== 'web'\n    ) {\n      if (!suppressWarning) {\n        console.warn(\n          `Constants.manifest is ${invalidManifestType} because the embedded app.config could not be read. Ensure that you have installed the expo-constants build scripts if you need to read from Constants.manifest.`\n        );\n      }\n    } else if (\n      nativeConstants.executionEnvironment === ExecutionEnvironment.StoreClient ||\n      nativeConstants.executionEnvironment === ExecutionEnvironment.Standalone\n    ) {\n      // If we somehow get here, this is a truly exceptional state to be in.\n      // Constants.manifest should *always* be defined in those contexts.\n      throw new CodedError(\n        'ERR_CONSTANTS_MANIFEST_UNAVAILABLE',\n        `Constants.manifest is ${invalidManifestType}, must be an object.`\n      );\n    }\n  }\n  return rawManifest;\n}\n\nexport default constants as Constants;\n"],"mappings":"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"}