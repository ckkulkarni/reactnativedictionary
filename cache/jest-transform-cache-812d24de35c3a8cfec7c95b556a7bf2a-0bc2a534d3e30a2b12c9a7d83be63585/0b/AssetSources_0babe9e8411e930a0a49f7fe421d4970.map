{"version":3,"names":["_expoModulesCore","require","_pathBrowserify","_interopRequireDefault","_reactNative","_urlParse","_AssetSourceResolver","_PlatformUtils","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","assetMapOverride","getManifest","selectAssetSource","meta","_manifest2$extra","_manifest2$extra$expo","hasOwnProperty","hash","scale","AssetSourceResolver","pickScale","scales","PixelRatio","get","index","findIndex","s","fileHashes","uri","fileUris","resolveUri","assetUrlOverride","path","join","fileScale","fileExtension","type","encodeURIComponent","suffix","name","Platform","OS","test","httpServerLocation","manifest2","getManifest2","extra","expoGo","developer","baseUrl","URL","debuggerHost","set","href","bundleUrl","manifestBaseUrl","_URL","protocol","resolvedPath","startsWith","pathname"],"sources":["../src/AssetSources.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\nimport path from 'path-browserify';\nimport { PixelRatio } from 'react-native';\nimport { PackagerAsset } from 'react-native/Libraries/Image/AssetRegistry';\nimport URL from 'url-parse';\n\nimport AssetSourceResolver from './AssetSourceResolver';\nimport { getManifest, getManifest2, manifestBaseUrl } from './PlatformUtils';\n\n// @docsMissing\nexport type AssetMetadata = Pick<\n  PackagerAsset,\n  'httpServerLocation' | 'name' | 'hash' | 'type' | 'scales' | 'width' | 'height'\n> & {\n  uri?: string;\n  fileHashes?: string[];\n  fileUris?: string[];\n};\n\nexport type AssetSource = {\n  uri: string;\n  hash: string;\n};\n\n// Fast lookup check if asset map has any overrides in the manifest\nconst assetMapOverride = getManifest().assetMapOverride;\n\n/**\n * Selects the best file for the given asset (ex: choosing the best scale for images) and returns\n * a { uri, hash } pair for the specific asset file.\n *\n * If the asset isn't an image with multiple scales, the first file is selected.\n */\nexport function selectAssetSource(meta: AssetMetadata): AssetSource {\n  // Override with the asset map in manifest if available\n  if (assetMapOverride && assetMapOverride.hasOwnProperty(meta.hash)) {\n    meta = { ...meta, ...assetMapOverride[meta.hash] };\n  }\n\n  // This logic is based on that of AssetSourceResolver, with additional support for file hashes and\n  // explicitly provided URIs\n  const scale = AssetSourceResolver.pickScale(meta.scales, PixelRatio.get());\n  const index = meta.scales.findIndex((s) => s === scale);\n  const hash = meta.fileHashes ? meta.fileHashes[index] || meta.fileHashes[0] : meta.hash;\n\n  // Allow asset processors to directly provide the URL to load\n  const uri = meta.fileUris ? meta.fileUris[index] || meta.fileUris[0] : meta.uri;\n  if (uri) {\n    return { uri: resolveUri(uri), hash };\n  }\n\n  // Check if the assetUrl was overridden in the manifest\n  const assetUrlOverride = getManifest().assetUrlOverride;\n  if (assetUrlOverride) {\n    const uri = path.join(assetUrlOverride, hash);\n    return { uri: resolveUri(uri), hash };\n  }\n\n  const fileScale = scale === 1 ? '' : `@${scale}x`;\n  const fileExtension = meta.type ? `.${encodeURIComponent(meta.type)}` : '';\n  const suffix = `/${encodeURIComponent(\n    meta.name\n  )}${fileScale}${fileExtension}?platform=${encodeURIComponent(\n    Platform.OS\n  )}&hash=${encodeURIComponent(meta.hash)}`;\n\n  // For assets with a specified absolute URL, we use the existing origin instead of prepending the\n  // development server or production CDN URL origin\n  if (/^https?:\\/\\//.test(meta.httpServerLocation)) {\n    const uri = meta.httpServerLocation + suffix;\n    return { uri, hash };\n  }\n\n  // For assets during development using manifest2, we use the development server's URL origin\n  const manifest2 = getManifest2();\n\n  if (manifest2?.extra?.expoGo?.developer) {\n    const baseUrl = new URL(`http://${manifest2.extra.expoGo.debuggerHost}`);\n    baseUrl.set('pathname', meta.httpServerLocation + suffix);\n\n    return {\n      uri: baseUrl.href,\n      hash,\n    };\n  }\n\n  // For assets during development, we use the development server's URL origin\n  if (getManifest().developer) {\n    const baseUrl = new URL(getManifest().bundleUrl);\n    baseUrl.set('pathname', meta.httpServerLocation + suffix);\n    return { uri: baseUrl.href, hash };\n  }\n\n  // Production CDN URIs are based on each asset file hash\n  return {\n    uri: `https://classic-assets.eascdn.net/~assets/${encodeURIComponent(hash)}`,\n    hash,\n  };\n}\n\n/**\n * Resolves the given URI to an absolute URI. If the given URI is already an absolute URI, it is\n * simply returned. Otherwise, if it is a relative URI, it is resolved relative to the manifest's\n * base URI.\n */\nexport function resolveUri(uri: string): string {\n  if (!manifestBaseUrl) {\n    return uri;\n  }\n\n  const { protocol } = new URL(uri);\n  if (protocol !== '') {\n    return uri;\n  }\n\n  const baseUrl = new URL(manifestBaseUrl);\n  const resolvedPath = uri.startsWith('/') ? uri : path.join(baseUrl.pathname, uri);\n  baseUrl.set('pathname', resolvedPath);\n  return baseUrl.href;\n}\n"],"mappings":"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"}